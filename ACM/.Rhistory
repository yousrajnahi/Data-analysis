#Chargement du fichier de jeu des données
data<- read.csv("projectdata.csv")
data$Index <- NULL
#========================================================== ACM ================================================================================
#Nombre de variables du jeux des données
nb_col=16
#Nombre d'observation du jeux des données
nb_rows=60
#Importation des bibilothèques
library(FactoMineR)
library(psych)
L = 0
o=1
m=0
taux_indice=1
TAUX=0
p=0
for(i in 1:nb_col){
km=kmeans(data[,i], 3,nstart = 25)
TAUX[taux_indice]=(km$betweenss/km$totss)
taux_indice=taux_indice+1
#Le taux de discrétisation est supérieur à 0.5 alors on transforme chaque variable quantitative en 3 modalités
if( (km$betweenss/km$totss)>0.5 ){
if(p==0){
all_cluster=cbind( km$cluster)
L[o]=3:3
o=o+1
m=m+3
p=1
}
else{
all_cluster=cbind(all_cluster,km$cluster)
m=m+3
L[o]=3
o=o+1
}
}
else{
#Le taux de discrétisation est inférieur à 0.5 alors on transforme chaque variable quantitative en 4 modalités
km=kmeans(data[,i], 4, iter.max = 100)
if(p==0){
all_cluster=cbind(km$cluster)
L[o]=4:4
m=m+4
o=o+1
p=1
}
else{
all_cluster=cbind(all_cluster,km$cluster)
m=m+4
L[o]=4
o=o+1
}
}
}
#Affichage du taux de discrétisation de chaque variable
TAUX
#Variables quantitatives
data
#Variables qualitatives
data_categ<-data.frame(data)
for(i in 1:nb_col){
data_categ[,i]=all_cluster[,i]
}
data_categ
TAUX_x=TAUX*100
Taux_=data.frame(matrix(ncol = nb_col, nrow = 1))
Taux_=setNames(Taux_, names(data))
for(i in 1:nb_col){
Taux_[1,i]=paste(round(TAUX_x[i],2),"%")
}
#Taux en % de discrétisation de chaque transformation
Taux_
#Installation des bibilothèques necessaire pour l'enregistrement d'un fichier Excel
install.packages("writexl")
#Importation des bibilothèques necessaire pour l'enregistrement d'un fichier Excel
library("writexl")
#Enregistrement des variables quantitatives dans un fichier Excel
write_xlsx(data.frame(data),"data_quanti.xlsx")
#Enregistrement des variables qualitatives dans un fichier Excel
write_xlsx(data.frame(data_categ),"data_quali.xlsx")
#Enregistrement du taux en % de discrétisation de chaque transformation dans un fichier Excel
write_xlsx(data.frame(Taux_),"TAUX.xlsx")
#Le regroupement dans un fichier Excel des variables quantitatives et des variables qualitatives ainsi que le taux de discrétisation de chaque transformation est fait dans un fichier nomé projectdata_ACM
#Construction du tableau disjonctif complet
g=c(1)
for(i in 2:m){
a=c(1)
g=cbind(g,a)
}
TDC=data.frame(g)
for(z in 1:nb_rows){
count_V=1
p=0
for(i in 1:length(L)){
for(j in 1:L[i]){
if(j==all_cluster[z,i]){
if(p==0){
V=1:1
p=1
count_V=count_V+1
}
else{
V[count_V]=1
count_V=count_V+1
}
}
else{
if(p==0){
V=0:0
p=1
count_V=count_V+1
}
else{
V[count_V]=0
count_V=count_V+1
}
}
}
}
TDC[z+1,]=V
}
TDC=TDC[-1,]
for(i in 1:length(L)){
principal_name=names(data)[i]
for(j in 1:L[i]){
column_name=paste0(principal_name,j)
names(TDC)[(i-1)*3+j]=column_name
}
}
#Affichage du tableau disjonctif complet
TDC
#Enregistrement du tableau disjonctif complet dans un fichier Excel
write_xlsx(data.frame(TDC),"TDC.xlsx")
#Calcule de la fréquence de chaque modalité
propmod=apply(TDC,2,sum)/(nrow(TDC))
Bad_modalite=""
bad=1
faible_freq=0
for(i in 1:length(propmod)){
if(propmod[i]<0.01){
Bad_modalite[bad]=names(propmod)[i]
bad=bad+1
print(paste("La modalité",names(propmod)[i], " est a faible frequence" ,"sa frequence est ",propmod[i]) )
faible_freq=1
}
}
if(faible_freq==0){
print( "Aucune modalité n'est de faible fréquence .")
}
#Afficahge de la fréquence de chaque modalité
propmod
#Absence d’une modalité rare (Toute les fréquences > 0.01)
#Changement de type pour correspondre a la fonction MCA
i=0
while(i < ncol(data_categ)){
i=i+1
data_categ[,i] = as.factor(data_categ[,i])
}
str(data_categ)
#Application de l’ACM (on prend au début ncp=5 la valeur par défaut)
res<-MCA(data_categ,ncp=5,graph=FALSE,axes=c(2.3))
res
#nombre de modalités
p<-ncol(TDC)
#nombre de variables
s <- ncol(data)
#nombre d'individus
n <- nrow(data)
#Afficahge du nombre d’individus, le nombre de variables et des modalités
print(paste("On a",p,"modalités" ,s,"varialbes","ainsi que ",n,"individus"))
#Calcule des valeurs propres, le pourcentage d’inertie de chaque valeur propre ainsi que le cumul des pourcentages d’inertie
res$eig
#Graphique des valeurs propres
plot(res$eig[,1],type="b",main="valeurs propres")
#Détermination de la dimension du sous espace en utilisant la règle Var(val prop éliminées)/var(val prop) < 0.05
var(res$eig[8:32,1])*(32-8)*100/(var(res$eig[,1])*(32-1))
#8.930923 > 5
var(res$eig[9:32,1])*(32-9)*100/(var(res$eig[,1])*(32-1))
#6.995712 > 5
var(res$eig[10:32,1])*(32-10)*100/(var(res$eig[,1])*(32-1))
#5.510023 > 5
var(res$eig[11:32,1])*(32-11)*100/(var(res$eig[,1])*(32-1))
#4.396388 < 5
#Donc la dimension du sous espace est 10
#Application de l’ACM après détermination de la dimension du sous espace
res<-MCA(data_categ,ncp=10,graph=FALSE,axes=c(2.3))
res
#========================================================== Nuage de Modalités ================================================================================
#Calculez le cos2 des modalités sur le sous espace
res$var$cos2
print(t(apply(res$var$cos2,1,cumsum)),digit=2)
#Modalités bien représentées, moyennement représentées et faiblement représentées sur le sous espace
cos_sum_var=t(apply(res$var$cos2,1,cumsum))
for(i in 1:length(cos_sum_var[,10])){
if(cos_sum_var[i,10]>=0.8){
print(paste("la modalité",i, "est bien representé"))
}
if(cos_sum_var[i,10]>=0.6 && cos_sum_var[i,10]<0.8){
print(paste("la modalité",i, "est moyennement representé"))
}
if(cos_sum_var[i,10]<0.6){
print(paste("la modalité",i, "est faiblements representé"))
}
}
#Calcule de la contribution des modalités dans chaque axe du sous espace
contrib <- res$var$contrib
#Affichage de la contribution des modalités dans chaque axe du sous espace
contrib
#Application la CAH au tableau des contributions des modalités aux axes du sous espace
cont<-HCPC(as.data.frame(contrib),nb.clust=-1)
cont$desc.var
#Tracer le nuage des modalités projeté sur les 2 premiers axes.
plot(res,invisible="ind")
#========================================================== Nuage des individus ============================================================
#Calcule du cos2 des individus sur le sous espace
res$ind$cos2
print(t(apply(res$ind$cos2,1,cumsum)),digit=2)
#Individus bien représentés, moyennement représentés et faiblement représentés sur le sous espace
cos_sum_ind=t(apply(res$ind$cos2,1,cumsum))
for(i in 1:length(cos_sum_ind[,10])){
if(cos_sum_ind[i,10]>=0.8){
print(paste("l'individu",i, "est bien representé"))
}
if(cos_sum_ind[i,10]>=0.6 && cos_sum_ind[i,10]<0.8){
print(paste("l'individu",i, "est moyennement representé"))
}
if(cos_sum_ind[i,10]<0.6){
print(paste("l'individu",i, "est faiblements representé"))
}
}
#Calcule de la contribution des individus dans chaque axe du sous espace
contrib <- res$ind$contrib
#Affichage de la contribution des individus dans chaque axe du sous espace
contrib
#Application de la CAH au tableau des contributions des individus aux axes du sous espace
cont<-HCPC(as.data.frame(res$ind$contrib),nb.clust=-1)
cont$desc.var
#========================================================== Nuage des variables #==========================================================
#Calcule des coefficients de corrélation des variables avec les projections sur les axes du sous espace
res$var$eta2
#Graphique des coefficients de corrélation des variables avec les projections sur le 1er plan factoriel
plot(res,choix="var")