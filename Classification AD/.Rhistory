#===================================Préparation des données==========================================================
#Chargement du fichier de jeu des données
data<- read.csv("projectdata.csv")
data$Index <- NULL
#Visualisation du jeu des données sur
View(data)
#Exploration des attributs
str(data)
#Rendre les variables centrées et réduites
data_cr<-scale(data)
#Enregistrement des lignes manipulées dans un nouveau fichier
write.table(data_cr , 'projectdata_cr.csv', sep=",", col.names=TRUE, row.names=FALSE)
#Chargement du fichier de jeu des données centrées et réduites
projectdata_cr<- read.csv('projectdata_cr.csv')
#Visualisation du jeu des données sur
View(projectdata_cr)
#Exploration des attributs
str(projectdata_cr)
#=======================================Classification: k-means==================================================================
#Appliquation de k-means sur le jeu des données centrées et réduites (centers=4)
groupes.kmeans <- kmeans(projectdata_cr,centers=4,nstart=5)
#Instalation des bibliothèques nécessaires pour l’affichage des groupes crées par le k-means
install.packages("ggpubr")
install.packages("factoextra")
#Importation des bibliothèques nécessaires pour l’affichage des groupes crées par le k-means
library(ggpubr)
library(factoextra)
#Afficher les groupes crées par le k-means
fviz_cluster(groupes.kmeans, data = projectdata_cr,palette = c("#2E9FDF", "#00AFBB", "#E7B800","#e72a00"), geom = "point",ellipse.type = "convex", ggtheme = theme_bw())
#Calcule du taux d’inertie expliquée de la classification pour chaque classe
N=36
inertie.expl <- rep(0,times=N)
for (k in 2:N){
clus <- kmeans(projectdata_cr,centers=k,nstart=5)
inertie.expl[k] <- clus$betweenss/clus$totss
}
inertie.expl
#Condition max(inertie.expl)>0.95 non vérifiée  
N=37
inertie.expl <- rep(0,times=N)
for (k in 2:N){
clus <- kmeans(projectdata_cr,centers=k,nstart=5)
inertie.expl[k] <- clus$betweenss/clus$totss
}
inertie.expl
#Condition max(inertie.expl)>0.95 non vérifiée 
N=38
inertie.expl <- rep(0,times=N)
for (k in 2:N){
clus <- kmeans(projectdata_cr,centers=k,nstart=5)
inertie.expl[k] <- clus$betweenss/clus$totss
}
inertie.expl
#Condition max(inertie.expl)<0.95 vérifiée, donc N = 38
plot(1:N,inertie.expl,type="b",xlab="Nb. de groupes",ylab="% inertie expliquée")
#8 classes
var(inertie.expl[9:N])*(N-9)*100/(var(inertie.expl)*(N-1))
#>5
#9 classes
var(inertie.expl[10:N])*(N-10)*100/(var(inertie.expl)*(N-1))
#>5
#10 classes
var(inertie.expl[11:N])*(N-11)*100/(var(inertie.expl)*(N-1))
#>5
#11 classes
var(inertie.expl[12:N])*(N-12)*100/(var(inertie.expl)*(N-1))
#>5
#12 classes
var(inertie.expl[13:N])*(N-13)*100/(var(inertie.expl)*(N-1))
#>5
#13 classes
var(inertie.expl[14:N])*(N-14)*100/(var(inertie.expl)*(N-1))
#<5 , donc le nombre de classe à retenir est 13
#Application de k-means sur le jeu des données centrées et réduites (centers=13)
groupes.kmeans <- kmeans(projectdata_cr,centers=13,nstart=5)
#Afficher les groupes crées par le k-means
fviz_cluster(groupes.kmeans, data = projectdata_cr,palette = c("#FA8072","#8B0000","#C71585","#FFA500","#BDB76B","#0000FF","#DDA0DD","#4B0082","#00FF00","#008000","#808000","#778899","#528899"), geom = "point",ellipse.type = "convex", ggtheme = theme_bw())
#===========================================Classification: CAH ==============================================
#Installation des bibliothèques nécessaires pour l’application de CAH
install.packages("FactoMineR")
#Importation des bibliothèques nécessaires pour l’application de CAH
library(FactoMineR)
#Appliquation de CAH sur les données centrées et réduites
Res<-HCPC(projectdata_cr,nb.clust=-1)
#Distribution selon les deux axes
Res
#Distribution des groupes
plot(Res)
#Affichage du dendrogramme de la CAH
fviz_dend(Res,
cex = 0.7,                     # Taille du text
palette = "jco",               # Palette de couleur ?ggpubr::ggpar
rect = TRUE, rect_fill = TRUE, # Rectangle autour des groupes
rect_border = "jco",           # Couleur du rectangle
labels_track_height = 0.8      # Augment l'espace pour le texte
)
#Les variables quantitatives les plus corrélées avec la variable classification et description des classes retenues par variables
Res$desc.var
#Calcul du taux d'inertie
I<-Res$call
I
#Calcule de l'inertie Inter/Inertie total,avant la consolidation de la CAH
I$bw.before.consol
#Calcule de l'inertie Inter/Inertie total,après la consolidation de la CAH
I$bw.after.consol